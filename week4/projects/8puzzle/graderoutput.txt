See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Findbugs:     FAILED (1 warning)
Checkstyle:   FAILED (21 warnings)

Correctness:  38/42 tests passed
Memory:       11/11 tests passed
Timing:       17/17 tests passed

Aggregate score: 94.29%
[Compilation: 5%, API: 5%, Findbugs: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
5.5K Feb 25 01:21 Board.java
3.7K Feb 25 01:21 Solver.java


********************************************************************************
*  COMPILING
********************************************************************************


% javac Board.java
*-----------------------------------------------------------

% javac Solver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Board:

Solver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS
********************************************************************************


% findbugs *.class
*-----------------------------------------------------------
L P UPM_UNCALLED_PRIVATE_METHOD UPM: The private method 'less()' is never called.  At Board.java:[line 203]
Warnings generated: 1

================================================================


% checkstyle *.java
*-----------------------------------------------------------
Board.java:8:17: The instance variable 'N' must start with a lowercase letter and use camelCase. [MemberName]
Board.java:57:19: 'if' is not followed by whitespace. [WhitespaceAfter]
Board.java:61:22: 'while' is not followed by whitespace. [WhitespaceAfter]
Board.java:90:42: ',' is preceded with whitespace. [NoWhitespaceBefore]
Board.java:90:49: ',' is preceded with whitespace. [NoWhitespaceBefore]
Board.java:112:12: 'for' is not followed by whitespace. [WhitespaceAfter]
Board.java:116:19: 'if' is not followed by whitespace. [WhitespaceAfter]
Board.java:150:15: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Board.java:159:15: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Board.java:168:15: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Board.java:177:15: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Board.java:217:46: ',' is preceded with whitespace. [NoWhitespaceBefore]
Solver.java:1: Do not use .* in import statements. [AvoidStarImport]
Solver.java:30:37: '{' is not preceded with whitespace. [WhitespaceAround]
Solver.java:52:5: Define constructors after static and instance variables but before methods. [DeclarationOrder]
Solver.java:94:38: '{' is not preceded with whitespace. [WhitespaceAround]
Solver.java:94:39: '{' is not followed by whitespace. [WhitespaceAround]
Solver.java:103:18: 'while' is not followed by whitespace. [WhitespaceAfter]
Solver.java:113:43: '{' is not preceded with whitespace. [WhitespaceAround]
Solver.java:131:15: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Solver.java:132:19: '//' or '/*' is not followed by whitespace. [IllegalTokenText]
Checkstyle ends with 21 errors.

================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of Board
*-----------------------------------------------------------
Running 22 total tests.

Tests 5, 6, 13, and 14 rely upon toString() returning results in prescribed format.

Test 1a: Test hamming() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle07.txt
  * puzzle17.txt
  * puzzle27.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 1b: Test hamming() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 2a: Test manhattan() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle07.txt
  * puzzle17.txt
  * puzzle27.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 2b: Test manhattan() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 3: Test dimension() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
==> passed

Test 4a: Test toString() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 4b: Test toString() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 5a: Test neighbors() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 5b: Test neighbors() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
  * 127-by-127
==> passed

Test 6a: Test neighbors() of neigbors() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 6b: Test neighbors() of neighbors() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
==> passed

Test 7a: Test twin() with file inputs
  * puzzle04.txt
  * puzzle00.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
==> passed

Test 7b: Test twin() with random n-by-n boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 9-by-9
  * 10-by-10
==> passed

Test 8a: Test isGoal() on file inputs
  * puzzle00.txt
  * puzzle04.txt
  * puzzle16.txt
  * puzzle06.txt
  * puzzle09.txt
  * puzzle23.txt
  * puzzle2x2-unsolvable1.txt
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-00.txt
  * puzzle4x4-00.txt
==> passed

Test 8b: Test isGoal() on n-by-n goal boards
  * 2-by-2
  * 3-by-3
  * 4-by-4
  * 5-by-5
  * 6-by-6
  * 100-by-100
==> passed

Test 9: Check whether two Board objects can be created at the same time
  * random 3-by-3 and 3-by-3 boards
  * random 4-by-4 and 4-by-4 boards
  * random 2-by-2 and 2-by-2 boards
  * random 3-by-3 and 4-by-4 boards
  * random 4-by-4 and 3-by-3 boards
==> passed

Test 10a: Check equals()
  * reflexive
  * symmetric
  * checks that individual entries of array are equal
  * argument is object of type String
  * argument is object of type Object
  * argument is null
  * argument is Board of different dimension
==> passed

Test 10b: Test equals() on m-by-m vs. n-by-n goal boards
  * m = 2, n = 2
  * m = 3, n = 3
  * m = 4, n = 4
  * m = 2, n = 5
  * m = 5, n = 2
==> passed

Test 11: Check that Board is immutable by changing argument array after
         construction and making sure Board does not mutate
==> passed

Test 12: Check that Board is immutable by testing whether methods
         return the same value, regardless of order in which called
  * puzzle10.txt
  * puzzle20.txt
  * puzzle30.txt
  * 2-by-2
  * 3-by-3
  * 4-by-4
==> passed

Test 13: Call hamming() on a board that is kth-neighbor of a board
  * 0th neighbor of puzzle27.txt
  * 1th neighbor of puzzle27.txt
  * 2th neighbor of puzzle27.txt
  * 13th neighbor of puzzle27.txt
  * 13th neighbor of puzzle00.txt
  * 13th neighbor of puzzle2x2-unsolvable1.txt
==> passed

Test 14: Call manhattan() on a board that is a kth-neighbor of a board
  * 0th neighbor of puzzle27.txt
  * 1th neighbor of puzzle27.txt
  * 2th neighbor of puzzle27.txt
  * 13th neighbor of puzzle27.txt
  * 13th neighbor of puzzle00.txt
  * 13th neighbor of puzzle2x2-unsolvable1.txt
==> passed


Total: 22/22 tests passed!


================================================================
********************************************************************************
*  TESTING CORRECTNESS (substituting reference Board)
********************************************************************************

Testing correctness of Solver
*-----------------------------------------------------------
Running 20 total tests.

Test 1: Call moves() with file inputs
  * puzzle00.txt
  * puzzle01.txt
  * puzzle02.txt
  * puzzle03.txt
  * puzzle04.txt
  * puzzle05.txt
  * puzzle06.txt
  * puzzle07.txt
  * puzzle08.txt
  * puzzle09.txt
  * puzzle10.txt
  * puzzle11.txt
  * puzzle12.txt
  * puzzle13.txt
==> passed

Test 2: Call solution() with file inputs
  * puzzle00.txt
  * puzzle01.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         1  0
         3  2

  * puzzle02.txt
    - wrong initial board
    - student   solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64 65 66 67 68 69 70 71 72
        73 74 75 76 77 78 79 80  0

    - reference solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64 65 66 67 68 69 70  0 71
        73 74 75 76 77 78 79 80 72

  * puzzle03.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         2  0
         1  3

  * puzzle04.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         0  1  3
         4  2  5
         7  8  6

  * puzzle05.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  1  3
         0  2  6
         7  5  8

  * puzzle06.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         0  1  2  3
         5  6  7  4
         9 10 11  8
        13 14 15 12

  * puzzle07.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  3
         0  7  6
         5  4  8

  * puzzle08.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         2  3  5
         1  0  4
         7  8  6

  * puzzle10.txt
    - wrong initial board
    - student   solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64 65 66 67 68 69 70 71 72
        73 74 75 76 77 78 79 80  0

    - reference solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64  0 65 67 68 78 69 70 72
        73 74 66 75 76 77 79 71 80

  * puzzle15.txt
    - wrong initial board
    - student   solution() initial board =
        8
         1  2  3  4  5  6  7  8
         9 10 11 12 13 14 15 16
        17 18 19 20 21 22 23 24
        25 26 27 28 29 30 31 32
        33 34 35 36 37 38 39 40
        41 42 43 44 45 46 47 48
        49 50 51 52 53 54 55 56
        57 58 59 60 61 62 63  0

    - reference solution() initial board =
        8
         1  2  3  4  5  6  7  8
         9 10 11 12 13 14 15 16
        17 18 19 20 21 22 23 24
         0 25 27 28 29 30 31 32
        34 26 35 36 37 38 39 40
        33 41 42 43 45 46 47 48
        49 50 51 44 61 53 54 56
        57 58 59 52 60 62 55 63

==> FAILED

Test 3: Create two Solver objects at the same time
  * puzzle04.txt and puzzle04.txt
  * puzzle00.txt and puzzle04.txt
  * puzzle04.txt and puzzle00.txt
==> passed

Test 4a: Call isSolvable() with file inputs
  * puzzle01.txt
  * puzzle03.txt
  * puzzle04.txt
  * puzzle17.txt
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-unsolvable2.txt
  * puzzle4x4-unsolvable.txt
==> passed

Test 4b: Call isSolvable() on random n-by-n boards
  * 100 random 2-by-2 boards
==> passed

Test 5: Call moves() on unsolvable puzzles
  * puzzle2x2-unsolvable1.txt
  * puzzle2x2-unsolvable2.txt
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-unsolvable2.txt
  * puzzle4x4-unsolvable.txt
==> passed

Test 6: Call solution() on unsolvable puzzles
  * puzzle2x2-unsolvable1.txt
  * puzzle2x2-unsolvable2.txt
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-unsolvable2.txt
  * puzzle4x4-unsolvable.txt
==> passed

Test 7a: Check that Solver is immutable by testing whether methods
         return the same value, regardless of order in which called
  * puzzle3x3-00.txt
  * puzzle3x3-01.txt
  * puzzle3x3-05.txt
  * puzzle3x3-10.txt
  * random 2-by-2 solvable boards
==> passed

Test 7b: Check that Solver is immutable by testing whether methods
         return the same value, regardless of order in which called
  * puzzle3x3-unsolvable1.txt
  * puzzle3x3-unsolvable2.txt
  * puzzle4x4-unsolvable.txt
  * random 2-by-2 unsolvable boards
==> passed

Test 8: Call moves() with more file inputs
  * puzzle14.txt
  * puzzle15.txt
  * puzzle16.txt
  * puzzle17.txt
  * puzzle18.txt
  * puzzle19.txt
  * puzzle20.txt
  * puzzle21.txt
  * puzzle22.txt
  * puzzle23.txt
  * puzzle24.txt
  * puzzle25.txt
  * puzzle26.txt
  * puzzle27.txt
  * puzzle28.txt
  * puzzle29.txt
  * puzzle30.txt
  * puzzle31.txt
==> passed

Test 9: Check whether equals() method in Board is called
        with an argument of the wrong type
  * puzzle00.txt
  * puzzle05.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  1  3
         0  2  6
         7  5  8

  * puzzle10.txt
    - wrong initial board
    - student   solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64 65 66 67 68 69 70 71 72
        73 74 75 76 77 78 79 80  0

    - reference solution() initial board =
        9
         1  2  3  4  5  6  7  8  9
        10 11 12 13 14 15 16 17 18
        19 20 21 22 23 24 25 26 27
        28 29 30 31 32 33 34 35 36
        37 38 39 40 41 42 43 44 45
        46 47 48 49 50 51 52 53 54
        55 56 57 58 59 60 61 62 63
        64  0 65 67 68 78 69 70 72
        73 74 66 75 76 77 79 71 80

  * puzzle15.txt
    - wrong initial board
    - student   solution() initial board =
        8
         1  2  3  4  5  6  7  8
         9 10 11 12 13 14 15 16
        17 18 19 20 21 22 23 24
        25 26 27 28 29 30 31 32
        33 34 35 36 37 38 39 40
        41 42 43 44 45 46 47 48
        49 50 51 52 53 54 55 56
        57 58 59 60 61 62 63  0

    - reference solution() initial board =
        8
         1  2  3  4  5  6  7  8
         9 10 11 12 13 14 15 16
        17 18 19 20 21 22 23 24
         0 25 27 28 29 30 31 32
        34 26 35 36 37 38 39 40
        33 41 42 43 45 46 47 48
        49 50 51 44 61 53 54 56
        57 58 59 52 60 62 55 63

==> passed

Test 10: Check that constructor throws exception if board is null
==> passed

Test 11: Check for fragile dependence on toString()
  * puzzle00.txt
  * puzzle04.txt
  * puzzle08.txt
  * puzzle12.txt
==> passed

Test 12a: Call moves() with 2-by-2 file inputs
  * puzzle2x2-00.txt
  * puzzle2x2-01.txt
  * puzzle2x2-02.txt
  * puzzle2x2-03.txt
  * puzzle2x2-04.txt
  * puzzle2x2-05.txt
  * puzzle2x2-06.txt
==> passed

Test 12b: Call solution() with 2-by-2 file inputs
  * puzzle2x2-00.txt
  * puzzle2x2-01.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         1  2
         0  3

  * puzzle2x2-02.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         0  1
         3  2

  * puzzle2x2-03.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         3  1
         0  2

  * puzzle2x2-04.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         2  3
         1  0

  * puzzle2x2-05.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         2  3
         0  1

  * puzzle2x2-06.txt
    - wrong initial board
    - student   solution() initial board =
        2
         1  2
         3  0

    - reference solution() initial board =
        2
         0  3
         2  1

==> FAILED

Test 13a: Call moves() with 3-by-3 file inputs
  * puzzle3x3-00.txt
  * puzzle3x3-01.txt
  * puzzle3x3-02.txt
  * puzzle3x3-03.txt
  * puzzle3x3-04.txt
  * puzzle3x3-05.txt
  * puzzle3x3-06.txt
  * puzzle3x3-07.txt
  * puzzle3x3-08.txt
  * puzzle3x3-09.txt
  * puzzle3x3-10.txt
  * puzzle3x3-11.txt
  * puzzle3x3-12.txt
  * puzzle3x3-13.txt
  * puzzle3x3-14.txt
  * puzzle3x3-15.txt
  * puzzle3x3-16.txt
  * puzzle3x3-17.txt
  * puzzle3x3-18.txt
  * puzzle3x3-19.txt
  * puzzle3x3-20.txt
  * puzzle3x3-21.txt
  * puzzle3x3-22.txt
  * puzzle3x3-23.txt
  * puzzle3x3-24.txt
  * puzzle3x3-25.txt
  * puzzle3x3-26.txt
  * puzzle3x3-27.txt
  * puzzle3x3-28.txt
  * puzzle3x3-29.txt
  * puzzle3x3-30.txt
==> passed

Test 13b: Call solution() with 3-by-3 file inputs
  * puzzle3x3-00.txt
  * puzzle3x3-01.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  3
         4  5  0
         7  8  6

  * puzzle3x3-02.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  3
         4  0  5
         7  8  6

  * puzzle3x3-03.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  3
         0  4  5
         7  8  6

  * puzzle3x3-04.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         0  1  2
         4  5  3
         7  8  6

  * puzzle3x3-05.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  0  2
         4  6  3
         7  5  8

  * puzzle3x3-06.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  0
         4  8  3
         7  6  5

  * puzzle3x3-07.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  2  3
         0  4  8
         7  6  5

  * puzzle3x3-08.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         0  4  3
         2  1  6
         7  5  8

  * puzzle3x3-09.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  3  6
         5  2  8
         4  0  7

  * puzzle3x3-10.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         0  4  1
         5  3  2
         7  8  6

  * puzzle3x3-11.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  3  5
         7  2  6
         8  0  4

  * puzzle3x3-12.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  1  2
         3  0  6
         5  7  8

  * puzzle3x3-13.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  3  1
         0  7  2
         8  5  6

  * puzzle3x3-14.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         3  4  6
         2  0  8
         1  7  5

  * puzzle3x3-15.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         2  0  8
         1  3  5
         4  6  7

  * puzzle3x3-16.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         5  2  1
         4  8  3
         7  6  0

  * puzzle3x3-17.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  3  1
         0  2  6
         7  8  5

  * puzzle3x3-18.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  4  3
         7  0  8
         6  5  2

  * puzzle3x3-19.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         7  0  4
         8  5  1
         6  3  2

  * puzzle3x3-20.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         7  4  3
         2  8  6
         0  5  1

  * puzzle3x3-21.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         8  7  2
         1  5  0
         4  6  3

  * puzzle3x3-22.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         5  3  6
         4  0  7
         1  8  2

  * puzzle3x3-23.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         6  0  8
         4  3  5
         1  2  7

  * puzzle3x3-24.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         6  5  3
         4  1  7
         0  2  8

  * puzzle3x3-25.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         8  3  5
         6  4  2
         1  0  7

  * puzzle3x3-26.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         4  8  7
         5  3  1
         0  6  2

  * puzzle3x3-27.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  6  4
         0  3  5
         8  2  7

  * puzzle3x3-28.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         6  3  8
         5  4  1
         7  2  0

  * puzzle3x3-29.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         1  8  5
         0  2  4
         3  6  7

  * puzzle3x3-30.txt
    - wrong initial board
    - student   solution() initial board =
        3
         1  2  3
         4  5  6
         7  8  0

    - reference solution() initial board =
        3
         8  6  7
         2  0  4
         3  5  1

==> FAILED

Test 14a: Call moves() with 4-by-4 file inputs
  * puzzle4x4-00.txt
  * puzzle4x4-01.txt
  * puzzle4x4-02.txt
  * puzzle4x4-03.txt
  * puzzle4x4-04.txt
  * puzzle4x4-05.txt
  * puzzle4x4-06.txt
  * puzzle4x4-07.txt
  * puzzle4x4-08.txt
  * puzzle4x4-09.txt
  * puzzle4x4-10.txt
  * puzzle4x4-11.txt
  * puzzle4x4-12.txt
  * puzzle4x4-13.txt
  * puzzle4x4-14.txt
  * puzzle4x4-15.txt
  * puzzle4x4-16.txt
  * puzzle4x4-17.txt
  * puzzle4x4-18.txt
  * puzzle4x4-19.txt
  * puzzle4x4-20.txt
  * puzzle4x4-21.txt
  * puzzle4x4-22.txt
  * puzzle4x4-23.txt
  * puzzle4x4-24.txt
  * puzzle4x4-25.txt
  * puzzle4x4-26.txt
  * puzzle4x4-27.txt
  * puzzle4x4-28.txt
  * puzzle4x4-29.txt
  * puzzle4x4-30.txt
==> passed

Test 14b: Call solution() with 4-by-4 file inputs
  * puzzle4x4-00.txt
  * puzzle4x4-01.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11  0
        13 14 15 12

  * puzzle4x4-02.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  2  3  4
         5  6  7  0
         9 10 11  8
        13 14 15 12

  * puzzle4x4-03.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  2  3  4
         5  6  0  8
         9 10  7 12
        13 14 11 15

  * puzzle4x4-04.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  2  3  4
         5  0  7  8
         9  6 11 12
        13 10 14 15

  * puzzle4x4-05.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  2  3  4
         5  6  7  8
        10  0 11 12
         9 13 14 15

  * puzzle4x4-06.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =
        4
         1  6  2  4
         5  0  3  8
         9 10  7 11
        13 14 15 12

  * puzzle4x4-07.txt
    - wrong initial board
    - student   solution() initial board =
        4
         1  2  3  4
         5  6  7  8
         9 10 11 12
        13 14 15  0

    - reference solution() initial board =